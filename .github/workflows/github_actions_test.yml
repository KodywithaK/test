name: Publish GitHub Actions Artifacts test

on:
  workflow_dispatch:
  # push:
    # branches: [main]
    # paths:
    #   - 'FINAL/pakchunk0-Switch_P/Holiday/Content/NonAssets/ETP/**'

jobs:
  archive-build-artifacts:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout dqx_dat_dump
        uses: actions/checkout@v4
        with:
          path: ./dqx_dat_dump
          # repository: dqx-translation-project/dqx_dat_dump
          repository: KodywithaK/dqx_dat_dump
          # ref: main
          # ref: test

      - name: Checkout dqx-offline-localization
        uses: actions/checkout@v4
        with:
          path: ./dqx-offline-localization
          repository: KodywithaK/dqx-offline-localization
          ref: testing
          sparse-checkout: |
            FINAL/pakchunk0-Switch_P/Holiday/Content/NonAssets/ETP/
      #     # sparse-checkout-cone-mode: false
      #     # FINAL/pakchunk0-Switch_P/Holiday/Content/NonAssets/ETP/eventTextCsA11Client.win32.json
      
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          architecture: 'x64'
          # python-version: '3.x'
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies
      - name: Run Python
        # run: |
        #   find $PWD          
        run: |
          cd ./dqx_dat_dump
          python -m venv venv
          ./venv/Scripts/activate
          pip install -r requirements.txt
          cd ./tools/packing/
          python ./pack_etp_GitHubActions.py -a
          deactivate
          cd ../../
        # run: python -c 'import os, sys; print(sys.version); path = "."; dirs = os.listdir(path)'

      # - name: Add downloads & list.txt
      #   # run: |
      #     # ls -R
      #   run: |
      #     mkdir downloads
      #     printf '%s\n' * > downloads/list.txt
      #     cd downloads
      #     echo '1' > 1.txt
      #     echo '2' > 2.txt
      #     cd ..

      - name: Get Current Time
        # run: |
        #   echo "time=$(date +'%Y_%m_%d')" >> $GITHUB_ENV
        run: |
          echo "time=Get-Date -Format 'yyyy.MM.dd'" >> $GITHUB_ENV

      - name: Upload Artifact GitHub Action
        uses: actions/upload-artifact@main
        with:
          name: assets_${{ env.time }}
          # path: |
          #   downloads
          path: |
            ./dqx_dat_dump/tools/packing/new_etp
          retention-days: 1
